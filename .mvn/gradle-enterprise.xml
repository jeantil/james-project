<gradleEnterprise>
  <server>
    <url>https://ge.apache.org</url>
    <allowUntrusted>false</allowUntrusted>
    <!--
    credentials provided by jenkins exposing GRADLE_ENTERPRISE_ACCESS_KEY
    apache members can create their own on the server
    -->
  </server>
  <!-- options are documented at https://docs.gradle.com/enterprise/maven-extension/#configuring_background_uploading -->
  <buildScan>
    <backgroundBuildScanUpload>#{isFalse(env['CI'])}</backgroundBuildScanUpload>
    <!-- Always publish build scans for CI, only if requested locally -->
    <publish>#{env['CI'] == null ? 'ON_DEMAND' : 'ALWAYS'}</publish>
    <capture>
      <goalInputFiles>false</goalInputFiles> <!-- To be enabled locally when debugging goal caching or if we want to enable predictive test selection -->
      <buildLogging>false</buildLogging> <!-- disabled by default for privacy and performance, to be discussed -->
      <testLogging>false</testLogging> <!-- disabled by default for privacy and performance, to be discussed -->
    </capture>
    <links>
      <link>
        <name>Apache James github</name>
        <url>https://github.com/apache/james-project/</url>
      </link>
      <link>
        <name>Apache James project website</name>
        <url>https://github.com/apache/james-project/</url>
      </link>
    </links>
    <obfuscation>
      <!-- Use Spring Expression Language. -->
      <hostname>#{isTrue(env['CI']) ? hostname : 'Local agent'}</hostname>
      <ipAddresses>#{sha512(ipAddresses)}</ipAddresses>
    </obfuscation>
  </buildScan>
  <buildCache>
    <local>
      <enabled>true</enabled>
      <cleanup>
        <!-- materialize default settings -->
        <retention>P7D</retention>
        <interval>P1D</interval>
      </cleanup>
    </local>
    <remote>
      <storeEnabled>false</storeEnabled>
      <!--
      the next step is this
      <storeEnabled>#{isTrue(env['CI'])</storeEnabled>
      but it requires requesting a cache node to infra project
      -->
    </remote>
  </buildCache>
</gradleEnterprise>
